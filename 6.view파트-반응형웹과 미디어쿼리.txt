
  IDE 도구

  - Eclipse [과정, 업무]  : 무료
  - IntelliJ [과정x, 업무o] : 기간제한(30Day) / 유료  / Eclipse 대항마?
  ※ Kotlin라는 프로그래밍 언어를 Jetbranins에서 만듦.
  ※ 교육기관(상업적인), 대학교(대학교 이메일인증), 교사/학생등
    기간제한(최대 6개월까지) 코드발급해서 사용가능한 제도
-----------------------------------------------------------------------------
 - Fleet  : visual studio code의 대항마? : 당분간 무료...올해 릴리즈.. 
 - visual studio code [과정,업무] : 무료 
 
  I. 언어 설정

   [확장] CTRL+SHIFT+X 누르고, [검색창]Korean 입력 후 Korean language pack [설치]
   누른 후 재시작(restart)

  ※ CTRL+SHIFT+P 누르면 명령프롬프트에 >display language mode 또는
     > lang 만 입력해서 해당 항목에서 EN이나 KO를 선택한 뒤 재시작

  II. 기본 사용순서













    ※ 시멘틱 태그 : (의미적인 태그를 사용해서) 검색이나 데이터 수집등에 용이하고,
       미래에 나올 기술이나 디바이스 프렌들리(기계 친화적인) 태그

    1. 문서의 헤더영역 : 웹문서의 윗쪽/머리말 영역 ( 사이트 소개-로고, 메뉴-내비게이션, 검색)
          <header>...</header>      vs    <div id="header">...</div>

        ※ 검색엔진이나 하드웨어(새로운 디바이스)등이 아! 여기가 헤더구나~

    2. 문서의 본문영역 : 주된 내용들 ( 전달하고자 하는, 핵심내용/UI)
        <section>...</section>     vs    <div id="content">...</div>
        <main>...</main>
        <div>...</div>
      ※ section은 div와 같이 컨텐츠를 구분하는 태그이지만, 의미의 유무로 차이가 있음
      ※ main 태그는 문서 내에서 한번만 사용가능
         section은 여러번 사용가능
         여전히 div는 사용가능

          div 태그 : divide, division (구획을) 나누다,  구분하다 ==> 표현위주
          section 태그 : 중요한 내용이 담긴 부분을 의미  ==> 표현 + 의미
       ※ HTML5이전에 div로만 사용하다보니 div가 너무 많이 사용 ==>
        정보검색, 크롤링(=수집), 분류, 재가공, 분석..시 많은 사회적인 비용발생..

    3. 문서의 사이드영역 : 본문과 관계는 있지만, 크게 관련은 없는...(광고,검색,로그인)
       <aside>...</aside>                <div id="sidebar">..</div>

    4. 문서의 푸터영역 : 웹문서의 소유자 정보/아랫쪽(소유권 정보, 연락처, 등등)
      <footer>...</footer>             <div id="footer">...</div>

   웹 문서가 문법에 맞게 작성되었는지 검증하는 도구 
    - 잘 맞게 만들어진 문서 : well-formed document
    - w3c validator (=유효성 검사 도구) 


   ※ 반응형 웹           VS      적응형 웹
    [Responsive Web]          [Adaptive Web]
        Reactivity..
   https://naver.com     https://m.naver.com   [다른 하도메인]

   --> 여러가지 스크린 규격을 가진 디바이스가 많아진 지금!! 필요한 기술
   --> 과거에는 단일규격이거나, 없었던... 하지만 지금은 필수!

   ex> PC로 보던 웹문서를 모바일, 태블릿 그외 각종 디바이스(watch..)로
       다른 스크린규격에도 알맞게 보여지게 하는 기술
       [Server-Side Rendering]   >   [Client-Side Rendering]
                 SSR                                 CSR

   I. 구현방법

    미디어 쿼리(media query) 기술!!

    미디어 쿼리란, 미디어(=매체) 및 화면의 크기에 따른 다른 '스타일시트'가
적용되도록 하는 기술! <===> Q.코끼리를 냉장고에 넣는 방법? 

   ※ 과거에는 안되었다가 지금은 기술의 발전,하드웨어/소프트웨어의 발전..
      지금은 가능하게 되어서 이제는 쉽게 처리가 가능!

  II. 작성위치

    1) CSS 에 작성 --> CSS에서 연결
    <link href="css/main.css" rel="stylesheet">

     ---------- main.css -----------
      import "./reset.css";
      import "./rwd.css";  

      @media screen and (max-width: 768px) {
          ...css here! ...
      }
     ---------------------------------
  
    2) CSS 에 작성 --> HTML에서 연결

    <link href="css/main.css" rel="stylesheet">
    <link href="css/rwd.css" rel="stylesheet">

 III. 각 디바이스별 해상도 참고

    - Android : Material.io screen/device metrics
    - Apple(Mac) : pass
    ※ statcounter webpage : 국내외 인터넷으로 수집된 각종 통계
   (https://gs.statcounter.com)





 




































